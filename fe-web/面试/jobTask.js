/**
 * @description 用star方法描述接触过的项目，理论和实际相结合
 *
 *
 */

/**
 * @description 中台业务场景
 * 1. S：多管理后台项目的微前端体系建设（工程化体系建设）
 *    1.1 开发物料重复建设，无法形成有效沉淀
 *    1.2 基建体系不统一，没有形成最佳实践，业务跟基建耦合
 *    1.3 功能类似需求场景多，开发效率待提高
 *    1.4 多平台融合，建设微前端
 *    1.5 标准化CI/CD流程
 * 2. T：从规范，到参考最佳实践，逐步建设工程化
 *    2.1 结合项目业务特征，典型业务场景，封装公共组件，公共函数包（沉淀演示文档）
 *      2.1.1 典型业务场景抽象，支持一般的json 配置（提高开发效率）
 *      2.1.2 沉淀业务模版（日常业务需求支持模版修改）
 *    2.2 folk第三方cli,基于内核+插件机制建设合适自己的基建场景
 *      2.2.1 讨论，制定规范
 *      2.2.2 从需求评审到最终上线的完善流程能力建设
 *        2.2.2.1 代码规范，流程规范
 *        2.2.2.2 构建打包能力统一，开发物料建设，典型业务场景抽象
 *        2.2.2.3 CI/CD 能力建设
 *        2.2.2.4 node层/serveless建设
 *        2.2.2.5 扩大影响力，建设综合的前端框架（参考umi）
 *      2.2.3 输出可插拔的脚手架，涵盖全生命周期典型需求
 *    2.3 基于业务现状完善微前端体系
 * 3. A.R(回顾)
 * 4. 稳定性&开发效率建设
 *
 * 拆解问题：微前端方案对比，主要做了哪些事情
 */


/**
 * @description 泛移动端场景
 * S: mpa的H5项目，内嵌app
 * T：稳定性&性能优化
 * A: 基于项目做组件&方法库的沉淀，全流程规范
 *   1.1 营销活动页面通过抽离典型业务场景，建设可视化建站（提高业务迭代效率）
 *   1.2 核心业务页面的性能优化，自建打包构建体系(性能优化建设，稳定性体系建设，大盘指标建设)
 * R:
 */

/**
 * @description 可视化业务场景建设
 *
 *
 *
 */
