/**
 * 1. 区块链的学习体系（制定学习策略&时间安排）
 *    社区 https://learnblockchain.cn/
 *    1.1 chatgpt 提问如下
 *      假如你是web3,区块链资深开发专家，我想学习区块链并成为行业的开发人员，请你以表格的形式列出重要知识
 *      体系，核心专题，以及合理的学习规划
 *
 *    1.2 学习策略拆解如下
 *
 *      知识体系	核心专题	学习规划
      1.2.1区块链基础知识	区块链原理、共识算法、密码学、分布式系统	了解区块链的基本概念和原理，掌握区块链的共识算法、密码学和分布式系统的基本知识
          以概念原理为主，需要有重点长期理解
        https://www.liaoxuefeng.com/wiki/1207298049439968/1207298512909984（廖雪峰教程）
        https://github.com/luzhenqian/web3-examples（示例demo学习）
      1.2.2 区块链开发语言	Solidity、Vyper、Rust、Go	选择一种区块链开发语言进行深入学习和实践
        https://learnblockchain.cn/docs/solidity/（Solidity教程）
        智能合约开发	智能合约概念、Solidity编程、智能合约安全	学习智能合约的基本概念和编程技术，了解智能合约的安全问题和防范措施
        区块链开发框架	Truffle、Embark、DappHub、OpenZeppelin	学习使用区块链开发框架，提高开发效率和代码质量
        区块链应用开发	去中心化应用（DApp）、数字货币、供应链金融、数字身份认证等	学习区块链应用开发的基本原理和技术，掌握开发去中心化应用（DApp）的方法和技巧
        区块链网络	公有链、联盟链、私有链	了解不同类型的区块链网络，掌握搭建和管理区块链网络的方法和技术
        区块链工具	Remix、Ganache、Metamask、Web3.js	学习使用区块链开发工具，提高开发效率和代码质量
 */


/**
 * 1. 区块链的基本概念
 *    1.1 一种特殊的分布式数据库，区块链的世界里面，没有中心节点，每个节点都是平等的，都保存着整个数据库
 *      1.1.1 去中心化，无管理员
 *    1.2 区块是什么
 *      1.2.1 区块头：记录当前区块的特征值，生成时间&当前hash&上一个区块hash
 *      1.2.2 区块体：存储的实际数据
 *    1.3 内容hash
 *      1.3.1 hash = SHA256( 区块头 ),由区块头信息唯一决定
 *      1.3.2 当前内容修改，一定导致后续区块hash变化
 *      1.3.3 数据一旦写入，就无法被篡改，仿佛历史一样，这是由hash算法决定的，有几个概念的hash值
 *    1.4 挖矿相关
 *      1.4.1 平均每10分钟，全网才能生成一个新区块，一小时也就六个（区块的生成门槛高，且可调整）
 *      1.4.2 遇到节点分叉，看那条链先达到6个新区块
 *      1.4.3 数据写入区块链，最少要等待十分钟，所有节点都同步数据，则需要更多的时间
 *      1.4.4 区块的生成需要矿工进行无数无意义的计算（难度是刻意提高的），默认称为工作量证明
 *      1.4.5 矿工负责把这些交易写入区块链，组成一个区块，计算哈希的过程叫做采矿
 *      1.4.6 矿工的收益来自于挖矿本身，区块交易写入的手续费
 * 2. 比特币介绍
 *    2.1 非对称加密
 *      2.1.1 非对称加密保证了支付的可靠性，共钥加密，私钥解密，或者反过来
 *    2.2 比特币钱包
 *      2.2.1 钱包存储公钥和私钥
 *        公钥：16进制hash值，相当于账户地址
 *        私钥：证明某个人是否拥有某个钱包地址
 *        钱包程序可以帮助用户管理私钥-公钥对
 *        UTXO：Unspent TX Output，即未花费交易输出
 *
 *
 *
 *
 */


/**
 * @description Solidity 学习总结
 * 主要学习资料：https://www.wtf.academy/solidity-start/HelloWeb3
 * 1. Solidity是一种面向合约的编程语言，用于编写智能合约（Smart Contract）并运行在以太坊（Ethereum）虚拟机上。
 *    Solidity是以太坊生态系统中最流行的智能合约编程语言之一，也是开发去中心化应用（DApp）的重要工具之一。
 *    1.1 需要编译：编译成以太坊虚拟机可以执行的字节码
 *
 *    1.2 部署：部署Solidity智能合约，将编译后的字节码部署到以太坊网络上，并生成智能合约地址
 *    1.3 调用：使用以太坊钱包或DApp调用智能合约的函数，执行智能合约的逻辑和操作（类似服务器逻辑）
 *    1.4 Remix：基于浏览器的Solidity IDE（集成开发环境），用于编写、编译、部署和调试Solidity智能合约
 * 2. 数据类型，分支语法，函数和事件，面向对象
 *    2.1 函数可见性说明符（成员变量类型），决定函数权限/功能的关键字（pure|view|payable）
 *      2.1.1 成员变量类型类似java可访问类型
 *      2.1.2 权限/功能：区分对合约属性的处理(主要是理解哪些场景触发消耗gas)
 * 3. 开发框架介绍
 * 4.
 *
 */
