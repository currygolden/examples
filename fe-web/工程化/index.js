
/**
 * tips: 方法论始终贯穿其中，明白前端/后端/数据在产品周期扮演的角色，主要架构存在什么问题
 * 1. 前端工程化”的定义：以降低成本、提高效率、保障质量为目的，通过一系列规范、工具、流程（分别对应软件工程中的方法、工具和过程）作为手段的实践体系
 *    前端架构”的定义是一系列工具和流程的集合，旨在提升前端代码的质量，并实现高效、可持续的工具流
 * 2. 整体进度（时间纬度）
 *      2.1 脚手架方案：提供工程搭建；ui/libs研发资源；规范系统的CI/CD；质量检测体系
 *      2.2 标准化：同类项目有多套规范及协作工具，团队共存多套同类工具，低水平轮子多，维护成本高；工具没有形成生态，不能发挥规模效应
 *          需求规范：MRD-PM-PMO-RD之间的共识
 *          设计规范：UI物料库 基础组件-业务组件-区块模版-页面模版-项目模版
 *          研发规范：统一研发框架工具 xxxCLI 散乱的工具难以发挥规模效应，无法形成生态,架构采用微内核和可插拔插件体系
 *          架构规范：实现自动化项目创建流程（自动接入基础服务），抽象场景模板满足多场景定制化需求
 *          发布规范：流水线持续集成 + 静态网站托管，检查/测试/发布
 *          运维规范：日志告警+coe
 *          规范落地：“普法”加“执法”落地标准化
 *      2.3 平台化：整体架构从下往上是规范-实践，从左往右是流程，生命周期
 *      2.4 云平台：
 *          AirLowCode 低代码研发探索
 *          在线研发工具 WebIDE
 *  3. 云开发平台整体架构
 *  4. 工程化专注解决面临的问题，还有一些基础能力需要其它服务支持
 *  5. 按产品生命周期
 *     需求评审阶段
 *     开发阶段
 *     联调阶段
 *     部署上线
 *     CI/CD
 *     性能监控
 *     质量稳定性
 */

/** =====================
 * 1. 工程化前半部分解决规范，开发构建等问题，还有部署，监控告警等，这里介绍CI/CD 和自动化部署
 *  1.1 现代前端工程的打包产物
 *  1.2 浏览器的缓存策略，此时解决html和静态资源的缓存策略
 *  1.3 构建时依据环境变量，将 HTML 中的静态资源地址加上 CDN 域名(publicPath 改造)。
 *  1.4 构建完成后将静态资源上传到 CDN 。
 *  1.5 配置 Nginx 的反向代理，将静态资源流量转发到 CDN
 *    === 以上属于静态资源的管理和组织
 *
 * 2. 自动化构建方案大致包含
 *  2.1 clone / checkout branch / lint&test/ yarn install / 构建 / 发布流水线&人工卡点 / 资源上传cdn等等
 *  2.2 保证环境一致性：Docker
 *  2.3 按流程构建：Jenkins
 *  2.4 自动化构建触发：Gitlab webhook（这一部分了解流程，实践还不够）
 *
 * 3. 预发环境、版本管理（秒级回滚）、小流量、灰度、AB测试（发布服务支持）

  */

/** ==================
 * 1. 监控告警实践
 *
 *
 *
 *
  */


 /**
  * 基础能力介绍，调度组合基础能力就是架构
  * 1. code github/gitlab(集成CI/CD)
  * 2. 研发套件
  * 3. devtools
  * 4. oceanus 运维管理
  * 5. raptor
  * 6. webstatic
  */



/**
 * 1. 工程适配案例
 *   工程适配是一个技术场景，也应该是完整的技术工程方案，需要考虑到综合情况
 * 2. 系统微前端迁移
 * 3. PC端移动端适配
 * 4. 项目基建能力建设
 * 5. 开发提效建设
 * 6. 稳定性建设&监控体系
 * 7. CI/CD 能力建设
 *
 *
 *
  */

/**
 * @description 如何结合业务和社区资料落地脚手架
 * 1. why: 脚手架体现出卡控工程阶段的核心流程，体现node开发提效落地，沉淀可复用工程场景
 * 2. how: 该如何落地脚手架
 *    2.1 调研社区方案，借鉴一些比较好的脚手架工具如（vue-cli,vite,father-build,umi等）
 *    2.2 主要是vue社区，react方向，也可以从国内开源公司视角，垂直社区关键词搜索（先不要深入细节，此时是资料收集和宏观认识建立阶段）
 *    2.3 产品视角：通过脑暴或者联想观察，总结脚手架常见功能点和应用场景
 *    2.4 实践：取各家所长，落地可实践的方案（项目管理一般手段）
 *      2.4.1 XXXX 这里是功能feature规划和落地时间
 *    2.5 输出文档&工程方案
 * 3. 阶段性目标对齐
 *    3.1 当前处于什么阶段，目标是否需要调整，阶段成果是什么
 * 
 * 
 */
